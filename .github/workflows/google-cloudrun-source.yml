# This workflow will deploy source code on Cloud Run when a commit is pushed to
# the "main" branch.
#
# To configure this workflow:
#
# 1. Enable the following Google Cloud APIs:
#
#    - Artifact Registry (artifactregistry.googleapis.com)
#    - Cloud Build (cloudbuild.googleapis.com)
#    - Cloud Run (run.googleapis.com)
#    - IAM Credentials API (iamcredentials.googleapis.com)
#
#    You can learn more about enabling APIs at
#    https://support.google.com/googleapi/answer/6158841.
#
# 2. Create and configure a Workload Identity Provider for GitHub:
#    https://github.com/google-github-actions/auth#preferred-direct-workload-identity-federation.
#
#    Depending on how you authenticate, you will need to grant an IAM principal
#    permissions on Google Cloud:
#
#    - Artifact Registry Administrator (roles/artifactregistry.admin)
#    - Cloud Run Source Developer (roles/run.sourceDeveloper)
#
#    You can learn more about setting IAM permissions at
#    https://cloud.google.com/iam/docs/manage-access-other-resources.
#
# 3. Change the values in the "env" block to match your values.

name: 'Deploy to Cloud Run from Source'

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: 'personal-spavi' # TODO: update to your Google Cloud project ID
  REGION: 'asia-southeast1' # TODO: update to your region
  SERVICE: 'onel-bootcamp' # TODO: update to your service name

jobs:
  bootcamp-deploy:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332' # actions/checkout@v4

      # Install package, build source, and test your application here
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'  # Change to your desired Node.js version

      - name: Install dependencies
        run: npm install

      - name: Run Lint
        run: npm run lint 

      - name: Run tests
        run: npm run test  # Adjust this command based on your test setup

      # Coverage reporting
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/lcov-report

      - name: Build the application
        run: npm run build

      # Configure Workload Identity Federation and generate an access token.
      #
      # See https://github.com/google-github-actions/auth for more options,
      # including authenticating via a JSON credentials file.
      # - id: 'auth'
      #   name: 'Authenticate to Google Cloud'
      #   uses: 'google-github-actions/auth@f112390a2df9932162083945e46d439060d66ec2' # google-github-actions/auth@v2
      #   with:
      #     workload_identity_provider: 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider' # TODO: replace with your workload identity provider
      - uses: 'google-github-actions/auth@v3'
        with:
          credentials_json: 'ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAicGVyc29uYWwtc3BhdmkiLAogICJwcml2YXRlX2tleV9pZCI6ICI0ZGVkNDMwYjRkYTY0YzNlNGM2ODI5YjA1NjZjMGJiYzk5NGQ0NDgyIiwKICAicHJpdmF0ZV9rZXkiOiAiLS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tXG5NSUlFdlFJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLY3dnZ1NqQWdFQUFvSUJBUUM2VjhQZzRBMkV2QVZMXG53ckNJaVl1WFVhY0dXMGtpeCt2am5tL1FhTWdzUDJGUG5BdXBTeEJ5Y1ZqeGQyR1NlZmRpeDc4SmdHcE9VeGthXG5VelFoUlhsL0ZoSWU2dnpFck05aU4vOXRCWUVkL0NFa2xjUUFpZ2x3TGt5eVlJQnBOVUZ2RUlZYzdod0NiUzNuXG5xR3U3OWJneGZwbXdlNUt4WDlVWXZvYmVYdnFVVVJZN3Iwc3RZb2V0b0VTajJoNUt6MnV6RDd4VHBwMDl6MUU5XG5YeFg1WDNqREwvSlRYc0pRQXhvYmZEYy9ORFhPRkRUaXBSUG5TV1FqN1ppQ29IeDNJSHFwbDlnQnRLdkE4dnU4XG5ZTEk2cjdrOHBzbHdNUGo3TjhkVDA1WS9VWEJLUkZKK0lmeGpOYTlnN1pVaFg1S2pUcmowajM4cEpkeE0xZDE3XG5jUDdJZXFGbEFnTUJBQUVDZ2dFQUNrc1YwV0swVnlHSERnZkxvUEhaZEZBNDJ6amVBZDRCbkVSZ3V5WkdtY0hJXG5oTkZ0c3M5OWh1elc4OE93bXBydEo1ZU92Y2pLVm9Md1JJd3JEdGx4SEN3M3hRaHkvUVEvWjhGZHlvTyswdmdJXG5vVkRsT2xNUVhCSXYvMmNsbGhUYkwvWTlpa25tNGRyRHZ6a0dTODdjMEFodndlMXU0dE1VaU9EaGFnQXlIdnVCXG5ndnR4Ujg5V0hiNXcraHE1Y0lSUFFoM0EzbWQ1bEdLOWNiL0FQaGxCVGswOWt3aEJQZE9Ka1REbU1aN1dRYTk2XG5DdlhYUjhBVVQrby9KR2tyTmVEZlpmemRTRnVFSml3Y0F4d05heFdpYUVyOHJERUdWU2czQjFNWlUzaGFjQzNkXG5ITTIvUTJ6WjNKa0JsaWdybXJldG53UW9tQ0xtRlJzbU1pMmZqcU4wQVFLQmdRRG9qekNESFRYbFlDSU5YOVE4XG5HRHJkTzdxamxHcWhCM3cyYXY4ODgvekdObW9pc0lxZkhkQVAxK0NpNlR4NTZUY0poYmljQzdkeis0dVFQdlZnXG4wNysvK3l3UC9BaEhhcis1MUV4T3hQN0xVRHZvdFBmVDNmbEc3YVVnL051UHFjZG5WRTdjOTFZeFlSck5SdFFHXG5ZL0J4dHFHWC9oTHZBNm1IYWY3YWJBbWJaUUtCZ1FETklBanpweVIreGtnc2pKWDhYbDdnVE9jUXNxdDkrT1haXG5zYTJ4bUtaT3gyRmVoUnJuWUpTWlUvSDlUNURhTktBdlplK3hPWU5YeEhKZEIxYWJWWlhqSnVhWUdObjBtd0xkXG5FemtXYmYzREJEVnhmdS9BdnJydlhDU0pGeHg5Q010MldwMjlidi85THc3N1FIOTQ4MFZReGxHWGJaVDB6Z3JDXG50ZGp1NU5PT0FRS0JnRWJodGRDUXE2ZXc2RkFaUUMvYzFyd3RnMUp1WHgyYmtYRm9wVWpudU1pVk56NUJmczdHXG5vRzdqeG5VQkQ4eThsMmpRbUJiL3Z6ZWJtTXNyVlZEZzJWWGpjV2VoMHNncHNpd3FsK04rU1lhZ2V0SVBybVdtXG5CMTlsK1dtWGlEZytjQ2QvVzlZZmtPYldDUHcrTlV1SlZIVGtURlp1TzBrY1hhU0hXd1VwM3JlOUFvR0FmM3B1XG5OY1psTnVoUlNHWmlmQUhHSXMySU9HZGhqcHRWZFZJbjZSdytGdTF3Qk1iaDduT21SaGZXWngvQW5PdGh0Yk03XG5JRC9tOFcrangwN2RNeElnWVpmMmJRWGN4bGhqa2pMMUlveGV6WWpiRWRyYWMwWFZkUllsbXBFallrMUo3UmJwXG51eVcxcjRwRVhEODhPVld1ZVVHV3lXNFB5WWdYUmVTdm1kL1ozZ0VDZ1lFQTNlSmJCYXd0cWpWMjkwRjBWdnFGXG5abDNFa0U0NC94VHdGK2VFV1hOd2x6TVFidE5Ob282WDVoMDY4b3ZyYkV3Z28vMVJnWE1nYVduSW9NbjZOV1RPXG5WNnEzZTRtSkx0ZmVjUEkySG02dy80MzlURU1MbUg3c3g3Y09mUlJuZWlxQVQ0TklxQm13VlhxZlJEdGgzazNNXG5uRVdjY3ZBdFpEMU9ITnZ3cjh0MDZuWT1cbi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS1cbiIsCiAgImNsaWVudF9lbWFpbCI6ICJvbmVsLTIwOUBwZXJzb25hbC1zcGF2aS5pYW0uZ3NlcnZpY2VhY2NvdW50LmNvbSIsCiAgImNsaWVudF9pZCI6ICIxMDEzNzM4MTQ5NTU2MzczNzMxMzIiLAogICJhdXRoX3VyaSI6ICJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvYXV0aCIsCiAgInRva2VuX3VyaSI6ICJodHRwczovL29hdXRoMi5nb29nbGVhcGlzLmNvbS90b2tlbiIsCiAgImF1dGhfcHJvdmlkZXJfeDUwOV9jZXJ0X3VybCI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9vYXV0aDIvdjEvY2VydHMiLAogICJjbGllbnRfeDUwOV9jZXJ0X3VybCI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9yb2JvdC92MS9tZXRhZGF0YS94NTA5L29uZWwtMjA5JTQwcGVyc29uYWwtc3BhdmkuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLAogICJ1bml2ZXJzZV9kb21haW4iOiAiZ29vZ2xlYXBpcy5jb20iCn0K' # '${{ secrets.GOOGLE_CREDENTIALS }}' # Replace with the name of your GitHub Actions secret change

      - name: 'Deploy to Cloud Run'
        uses: 'google-github-actions/deploy-cloudrun@33553064113a37d688aa6937bacbdc481580be17' # google-github-actions/deploy-cloudrun@v2
        with:
          service: '${{ env.SERVICE }}'
          region: '${{ env.REGION }}'
          # NOTE: If using a different source folder, update the image name below:
          source: './'

      # If required, use the Cloud Run URL output in later steps
      - name: 'Show output'
        run: |-
          echo ${{ steps.deploy.outputs.url }}
